%%%
   VERSION: 1
   LANGUAGE: ENGLISH
%%%

MODULE Irbp2EEv(SYSMODULE)
  !---------------------------------------------------------------------------!
  !
  ! (c) ABB
  !
  !---------------------------------------------------------------------------!
  !
  ! Module:       IrbpL2EEv.sys
  !
  ! Written by:   Stefan Öhrn
  !
  ! Description:  cell specifik tasks for irbp L 2.
  !
  ! Procedures:
  !
  ! Functions:
  !
  ! Created:      2004-10-01
  !
  ! Version:      1.0.0
  !
  ! History:      1.0.0
  !                 First release
  !               2005-11-04 SÖ
  !                 Added move to proc/load position after/before activating/deactivating
  !                 station.
  !               2005-11-04 SÖ
  !                 Major changes.
  !               2006-08-28 SÖ
  !                 Error in PreFetchPadv2, saved data to non existing data in task (works with common drive, not dual drive).
  !               2006-11-03 SÖ
  !                 Added subscription to new event EE_ABORT.
  !                  Deactivates activated MECH after aborted cycle.
  !                 Added subscription to event EE_START.
  !                  Deactivates all activated MECHs.
  !
  !---------------------------------------------------------------------------!
  !
  LOCAL CONST byte GAP_STN_2:=2;
  LOCAL VAR num nActMem;
  !
  CONST ee_event peEeAbortDeact2:=[EE_ABORT,"EvAbortDeact2","",255,255];
  CONST ee_event peEeAbortDeactA2:=[EE_START,"EvAbortDeactAll2","",255,255];
  ! pre part events
  CONST ee_event pePreFetchPadv2:=[EE_PRE_PROD,"PreFetchPadv2","",1,GAP_STN_2];
  CONST ee_event peEvActStn2:=[EE_PRE_PART,"EvActStn2","",1,GAP_STN_2];
  !
  ! part running
  !
  ! post part events
  CONST ee_event peEvDeactStn2:=[EE_POST_PART,"EvDeactStn2","",1,GAP_STN_2];
  !
  PROC EvAbortDeact2(\switch dummy)
    IF (nActMem>0) THEN
      IF (nActMem=2) THEN
        DeactStn2;
      ENDIF
      nActMem:=0;
    ENDIF
  ENDPROC

  PROC EvAbortDeactAll2(\switch dummy)
    DeactStn2;
  ENDPROC

  PROC PreFetchPadv2(\switch dummy)
    VAR partadv padvTmp;
    ! fetch adv part data for stn
    GetNextPartAdv 2,padvTmp;
    padvStn2:=padvTmp;
  ENDPROC

  PROC EvActStn2(\switch dummy)
    IF (OpMode()<>OP_AUTO) TPWrite "Activating station 2";
    ActStn2;
    nActMem:=2;
    MoveProcPosStn2;
  ENDPROC

  PROC EvDeactStn2(\switch dummy)
    MoveLoadPosStn2;
    IF (OpMode()<>OP_AUTO) TPWrite "Deactivating station 2";
    DeactStn2;
    nActMem:=0;
  ENDPROC
ENDMODULE