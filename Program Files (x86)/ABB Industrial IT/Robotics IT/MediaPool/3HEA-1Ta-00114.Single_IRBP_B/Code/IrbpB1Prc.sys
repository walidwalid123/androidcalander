%%%
   VERSION: 1
   LANGUAGE: ENGLISH
%%%

MODULE Irbp1Prc(SYSMODULE)
  !---------------------------------------------------------------------------!
  !
  ! (c) ABB
  !
  !---------------------------------------------------------------------------!
  !
  ! Module:       IrbpB1Prc.sys
  !
  ! Written by:   Stefan Öhrn
  !
  ! Description:  cell specifik tasks for irbp B 1.
  !
  ! Procedures:
  !
  ! Functions:
  !
  ! Created:      2004-10-01
  !
  ! Version:      1.0.0
  !
  ! History:      1.0.0
  !                 First release
  !               2005-11-08 SÖ
  !                 Added procedures for service position.
  !               2005-11-09 SÖ
  !                 Max torque from var instead of fixed value.
  !               2005-04-07 SÖ
  !                 Added instr EXIT after Loadid is finished to clear current path
  !               2006-07-14 SÖ
  !                 Changed IndexToStn1/IndexToStn2.
  !                 Added missing text in SetProcPosStn2/SetServPosStn2
  !                 Changed check of loaddata in ActStn1/ActStn2
  !               2006-11-06 SÖ
  !                 Added instr for move to sync position.
  !               2007-01-18 SÖ
  !                 Fix: Added arms in move to sync position.
  !               2007-04-25 SÖ
  !                 Added inpos signals for VC.
  !               2007-04-27 SÖ
  !                 Added language support
  !               2007-05-04 SÖ
  !                 Changed intch. calib for VC. Default values used.
  !
  !---------------------------------------------------------------------------!
  !
  LOCAL VAR string sHeader;
  LOCAL VAR string sMsgArr{5};
  LOCAL VAR num retCode1;
  LOCAL VAR num retCode2;
  LOCAL VAR partadv padvTmp1;
  LOCAL VAR partadv padvTmp2;
  LOCAL VAR num text_res_no;

  PROC CalibIntch1()
    VAR bool calib_done;
    VAR extjoint extax_side1;
    VAR extjoint extax_side2;

    IF (RobOS()) THEN
      CalibInterch1 INTERCH,1,10,nMaxTorque1,extax_side1,extax_side2,sdInterchCalib1,tool0,calib_done;
      IF (calib_done=TRUE) THEN
        bInterchCalib1:=TRUE;
        nInterchStn1:=extax_side1.eax_d;
        nInterchStn2:=extax_side2.eax_d;
      ENDIF
    ELSE
      nInterchStn1:=0;
      nInterchStn2:=180;
    ENDIF
  ENDPROC

  PROC LoadIdentStn1()
    VAR bool load_def;

    GetNextPartAdv 1,padvTmp1\statusCode:=retCode1;

    IF (retCode1=0) THEN
      IF (NOT bInterchCalib1) CalibIntch1;
      !
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,217);
      sMsgArr{1}:=TextResGet(text_res_no,219);
      sMsgArr{2}:=TextResGet(text_res_no,220);
      sMsgArr{3}:="";
      sMsgArr{4}:="";
      sMsgArr{5}:="";
      UIMsgBox \Header:=sHeader,sMsgArr{1}\MsgLine2:=sMsgArr{2}\MsgLine3:=sMsgArr{3}\MsgLine4:=sMsgArr{4}\MsgLine5:=sMsgArr{5}\Buttons:=btnOK\Icon:=iconWarning;
      !
      IndexToStn1;
      ActUnit STN1;
      %"ManLoadIdProc"%\ParIdType:=IRBP_B\MechUnit:=STN1\AxisNumber:=2\PayLoad:=ldTemp1\ConfigAngle:=90\AlreadyActive\DefinedFlag:=load_def;
      DeactUnit STN1;
      IF (load_def) THEN
        padvTmp1.load:=ldTemp1;
        UpdNextPartAdv 1,padvTmp1\statusCode:=retCode1;
        IF (retCode1<>0) THEN
          sHeader:=TextResGet(text_res_no,206);
          sMsgArr{1}:=TextResGet(text_res_no,207)+" 1";
          sMsgArr{2}:="";
          sMsgArr{3}:="";
          sMsgArr{4}:="";
          ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
        ENDIF
        EXIT;
      ENDIF
    ELSE
      ! not valid part or no part advanced defined in part.
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,206);
      IF (retCode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,203)+" 1";
      ELSEIF (retCode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 1";
      ENDIF
      sMsgArr{3}:="";
      sMsgArr{4}:="";
      ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
    ENDIF
  ENDPROC

  PROC LoadIdentStn2()
    VAR bool load_def;

    GetNextPartAdv 2,padvTmp1\statusCode:=retCode1;

    IF (retCode1=0) THEN
      IF (NOT bInterchCalib1) CalibIntch1;
      !
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,217);
      sMsgArr{1}:=TextResGet(text_res_no,219);
      sMsgArr{2}:=TextResGet(text_res_no,220);
      sMsgArr{3}:="";
      sMsgArr{4}:="";
      sMsgArr{5}:="";
      UIMsgBox \Header:=sHeader,sMsgArr{1}\MsgLine2:=sMsgArr{2}\MsgLine3:=sMsgArr{3}\MsgLine4:=sMsgArr{4}\MsgLine5:=sMsgArr{5}\Buttons:=btnOK\Icon:=iconWarning;
      !
      IndexToStn2;
      ActUnit STN2;
      %"ManLoadIdProc"%\ParIdType:=IRBP_B\MechUnit:=STN2\AxisNumber:=3\PayLoad:=ldTemp1\ConfigAngle:=90\AlreadyActive\DefinedFlag:=load_def;
      DeactUnit STN2;
      IF (load_def) THEN
        padvTmp1.load:=ldTemp1;
        UpdNextPartAdv 2,padvTmp1\statusCode:=retCode1;
        IF (retCode1<>0) THEN
          sHeader:=TextResGet(text_res_no,206);
          sMsgArr{1}:=TextResGet(text_res_no,207)+" 2";
          sMsgArr{2}:="";
          sMsgArr{3}:="";
          sMsgArr{4}:="";
          ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
        ENDIF
        EXIT;
      ENDIF
    ELSE
      ! not valid part or no part advanced defined in part.
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,206);
      IF (retCode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,203)+" 2";
      ELSEIF (retCode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 2";
      ENDIF
      sMsgArr{3}:="";
      sMsgArr{4}:="";
      sMsgArr{5}:="";
      ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
    ENDIF
  ENDPROC

  PROC IndexToStn1()
    VAR bool bActive;
    VAR jointtarget jtCurrent;

    IF (NOT bInterchCalib1) CalibIntch1;
    ! reset inpos signals used in vc
    Reset soLS_1_INPOS;
    Reset soLS_2_INPOS;
    bActive:=IsMechUnitActive(INTERCH);
    IF (NOT bActive) ActInterch1;
    jtCurrent:=CJointT();
    ! get parts for stations
    GetNextPartAdv 1,padvTmp1\statusCode:=retCode1;
    GetNextPartAdv 2,padvTmp2\statusCode:=retCode2;

    IF (retCode1=0) THEN
      jtCurrent.extax.eax_b:=padvTmp1.procAngle.eax_c;
    ELSE
      jtCurrent.extax.eax_b:=0;
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,218);
      IF (retcode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,214);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 1";
        sMsgArr{3}:=TextResGet(text_res_no,214);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF

    IF (retCode2=0) THEN
      jtCurrent.extax.eax_c:=padvTmp2.loadAngle.eax_c;
    ELSE
      jtCurrent.extax.eax_c:=0;
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,218);
      IF (retcode2=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,213);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode2=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 2";
        sMsgArr{3}:=TextResGet(text_res_no,213);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF
    ! apply interchange position
    jtCurrent.extax.eax_d:=nInterchStn1;
    IF (TaskRunRob()) THEN
      MoveAbsJ jtCurrent,sdInterch1,fine,tool0;
    ELSE
      %"MoveExtJ"% jtCurrent,sdInterch1,fine;
    ENDIF
    IF (NOT RobOS()) Set soLS_1_INPOS;
    WaitTime nTorqueTime;
    IF (NOT bActive) DeactInterch1;
  ENDPROC

  PROC IndexToStn2()
    VAR bool bActive;
    VAR jointtarget jtCurrent;

    IF (NOT bInterchCalib1) CalibIntch1;
    ! reset inpos signals used in vc
    Reset soLS_1_INPOS;
    Reset soLS_2_INPOS;
    bActive:=IsMechUnitActive(INTERCH);
    IF (NOT bActive) ActInterch1;
    jtCurrent:=CJointT();
    ! get parts for stations
    GetNextPartAdv 1,padvTmp1\statusCode:=retCode1;
    GetNextPartAdv 2,padvTmp2\statusCode:=retCode2;

    IF (retCode1=0) THEN
      jtCurrent.extax.eax_b:=padvTmp1.loadAngle.eax_c;
    ELSE
      jtCurrent.extax.eax_b:=0;
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,218);
      IF (retcode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,213);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 1";
        sMsgArr{3}:=TextResGet(text_res_no,213);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF

    IF (retCode2=0) THEN
      jtCurrent.extax.eax_c:=padvTmp2.procAngle.eax_c;
    ELSE
      jtCurrent.extax.eax_c:=0;
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,218);
      IF (retcode2=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,214);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode2=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 2";
        sMsgArr{3}:=TextResGet(text_res_no,214);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF
    ! apply interchange position
    jtCurrent.extax.eax_d:=nInterchStn2;
    IF (TaskRunRob()) THEN
      MoveAbsJ jtCurrent,sdInterch1,fine,tool0;
    ELSE
      %"MoveExtJ"% jtCurrent,sdInterch1,fine;
    ENDIF
    IF (NOT RobOS()) Set soLS_2_INPOS;
    WaitTime nTorqueTime;
    IF (NOT bActive) DeactInterch1;
  ENDPROC

  PROC SetLoadPosStn1()
    VAR num nValue;

    ! get partadv for station
    GetNextPartAdv 1,padvTmp1\statusCode:=retCode1;

    IF (retCode1=0) THEN
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,190);
      sMsgArr{1}:=TextResGet(text_res_no,221)+" 1, "+TextResGet(text_res_no,196)+" 1";
      sMsgArr{2}:=TextResGet(text_res_no,197)+" "+ValToStr(padvTmp1.loadAngle.eax_b);
      sMsgArr{3}:="";
      sMsgArr{4}:=TextResGet(text_res_no,198);
      sMsgArr{5}:="";
      nValue:=UINumEntry(\Header:=sHeader\MsgArray:=sMsgArr\Icon:=iconInfo\InitValue:=padvTmp1.loadAngle.eax_b);
      padvTmp1.loadAngle.eax_b:=nValue;

      sHeader:=TextResGet(text_res_no,190);
      sMsgArr{1}:=TextResGet(text_res_no,221)+" 1, "+TextResGet(text_res_no,196)+" 2";
      sMsgArr{2}:=TextResGet(text_res_no,197)+" "+ValToStr(padvTmp1.loadAngle.eax_c);
      sMsgArr{3}:="";
      sMsgArr{4}:=TextResGet(text_res_no,198);
      sMsgArr{5}:="";
      nValue:=UINumEntry(\Header:=sHeader\MsgArray:=sMsgArr\Icon:=iconInfo\InitValue:=padvTmp1.loadAngle.eax_c);
      padvTmp1.loadAngle.eax_c:=nValue;

      ! update partadv data for station
      UpdNextPartAdv 1,padvTmp1\statusCode:=retCode1;
      IF (retCode1<>0) THEN
        sHeader:=TextResGet(text_res_no,193);
        sMsgArr{1}:=TextResGet(text_res_no,199)+" 1";
        sMsgArr{2}:="";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ELSE
      ! not valid part or no part advanced defined in part.
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,193);
      IF (retCode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,203)+" 1";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
      ELSEIF (retCode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 1";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
      ENDIF
      ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
    ENDIF
  ENDPROC

  PROC SetProcPosStn1()
    VAR num nValue;

    ! get partadv for station
    GetNextPartAdv 1,padvTmp1\statusCode:=retCode1;

    IF (retCode1=0) THEN
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,191);
      sMsgArr{1}:=TextResGet(text_res_no,221)+" 1, "+TextResGet(text_res_no,196)+" 1";
      sMsgArr{2}:=TextResGet(text_res_no,197)+" "+ValToStr(padvTmp1.procAngle.eax_b);
      sMsgArr{3}:="";
      sMsgArr{4}:=TextResGet(text_res_no,198);
      sMsgArr{5}:="";
      nValue:=UINumEntry(\Header:=sHeader\MsgArray:=sMsgArr\Icon:=iconInfo\InitValue:=padvTmp1.procAngle.eax_b);
      padvTmp1.procAngle.eax_b:=nValue;

      sHeader:=TextResGet(text_res_no,191);
      sMsgArr{1}:=TextResGet(text_res_no,221)+" 1, "+TextResGet(text_res_no,196)+" 2";
      sMsgArr{2}:=TextResGet(text_res_no,197)+" "+ValToStr(padvTmp1.procAngle.eax_c);
      sMsgArr{3}:="";
      sMsgArr{4}:=TextResGet(text_res_no,198);
      sMsgArr{5}:="";
      nValue:=UINumEntry(\Header:=sHeader\MsgArray:=sMsgArr\Icon:=iconInfo\InitValue:=padvTmp1.procAngle.eax_c);
      padvTmp1.procAngle.eax_c:=nValue;

      ! update partadv data for station
      UpdNextPartAdv 1,padvTmp1\statusCode:=retCode1;
      IF (retCode1<>0) THEN
        sHeader:=TextResGet(text_res_no,194);
        sMsgArr{1}:=TextResGet(text_res_no,200)+" 1";
        sMsgArr{2}:="";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ELSE
      ! not valid part or no part advanced defined in part.
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,194);
      IF (retCode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,203)+" 1";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
      ELSEIF (retCode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 1";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
      ENDIF
      ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
    ENDIF
  ENDPROC

  PROC SetServPosStn1()
    VAR num nValue;

    ! get partadv for station
    GetNextPartAdv 1,padvTmp1\statusCode:=retCode1;

    IF (retCode1=0) THEN
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,192);
      sMsgArr{1}:=TextResGet(text_res_no,221)+" 1, "+TextResGet(text_res_no,196)+" 1";
      sMsgArr{2}:=TextResGet(text_res_no,197)+" "+ValToStr(padvTmp1.serviceAngle.eax_b);
      sMsgArr{3}:="";
      sMsgArr{4}:=TextResGet(text_res_no,198);
      sMsgArr{5}:="";
      nValue:=UINumEntry(\Header:=sHeader\MsgArray:=sMsgArr\Icon:=iconInfo\InitValue:=padvTmp1.serviceAngle.eax_b);
      padvTmp1.serviceAngle.eax_b:=nValue;

      sHeader:=TextResGet(text_res_no,192);
      sMsgArr{1}:=TextResGet(text_res_no,221)+" 1, "+TextResGet(text_res_no,196)+" 2";
      sMsgArr{2}:=TextResGet(text_res_no,197)+" "+ValToStr(padvTmp1.serviceAngle.eax_c);
      sMsgArr{3}:="";
      sMsgArr{4}:=TextResGet(text_res_no,198);
      sMsgArr{5}:="";
      nValue:=UINumEntry(\Header:=sHeader\MsgArray:=sMsgArr\Icon:=iconInfo\InitValue:=padvTmp1.serviceAngle.eax_c);
      padvTmp1.serviceAngle.eax_c:=nValue;

      ! update partadv data for station
      UpdNextPartAdv 1,padvTmp1\statusCode:=retCode1;
      IF (retCode1<>0) THEN
        sHeader:=TextResGet(text_res_no,195);
        sMsgArr{1}:=TextResGet(text_res_no,201)+" 1";
        sMsgArr{2}:="";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ELSE
      ! not valid part or no part advanced defined in part.
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,195);
      IF (retCode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,203)+" 1";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
      ELSEIF (retCode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 1";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
      ENDIF
      ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
    ENDIF
  ENDPROC

  PROC SetLoadPosStn2()
    VAR num nValue;

    ! get partadv for station
    GetNextPartAdv 2,padvTmp1\statusCode:=retCode1;

    IF (retCode1=0) THEN
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,190);
      sMsgArr{1}:=TextResGet(text_res_no,221)+" 2, "+TextResGet(text_res_no,196)+" 1";
      sMsgArr{2}:=TextResGet(text_res_no,197)+" "+ValToStr(padvTmp1.loadAngle.eax_b);
      sMsgArr{3}:="";
      sMsgArr{4}:=TextResGet(text_res_no,198);
      sMsgArr{5}:="";
      nValue:=UINumEntry(\Header:=sHeader\MsgArray:=sMsgArr\Icon:=iconInfo\InitValue:=padvTmp1.loadAngle.eax_b);
      padvTmp1.loadAngle.eax_b:=nValue;

      sHeader:=TextResGet(text_res_no,190);
      sMsgArr{1}:=TextResGet(text_res_no,221)+" 2, "+TextResGet(text_res_no,196)+" 2";
      sMsgArr{2}:=TextResGet(text_res_no,197)+" "+ValToStr(padvTmp1.loadAngle.eax_c);
      sMsgArr{3}:="";
      sMsgArr{4}:=TextResGet(text_res_no,198);
      sMsgArr{5}:="";
      nValue:=UINumEntry(\Header:=sHeader\MsgArray:=sMsgArr\Icon:=iconInfo\InitValue:=padvTmp1.loadAngle.eax_c);
      padvTmp1.loadAngle.eax_c:=nValue;

      ! update partadv data for station
      UpdNextPartAdv 2,padvTmp1\statusCode:=retCode1;
      IF (retCode1<>0) THEN
        sHeader:=TextResGet(text_res_no,193);
        sMsgArr{1}:=TextResGet(text_res_no,199)+" 2";
        sMsgArr{2}:="";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ELSE
      ! not valid part or no part advanced defined in part.
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,193);
      IF (retCode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,203)+" 2";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
      ELSEIF (retCode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 2";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
      ENDIF
      ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
    ENDIF
  ENDPROC

  PROC SetProcPosStn2()
    VAR num nValue;

    ! get partadv for station
    GetNextPartAdv 2,padvTmp1\statusCode:=retCode1;

    IF (retCode1=0) THEN
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,191);
      sMsgArr{1}:=TextResGet(text_res_no,221)+" 2, "+TextResGet(text_res_no,196)+" 1";
      sMsgArr{2}:=TextResGet(text_res_no,197)+" "+ValToStr(padvTmp1.procAngle.eax_b);
      sMsgArr{3}:="";
      sMsgArr{4}:=TextResGet(text_res_no,198);
      sMsgArr{5}:="";
      nValue:=UINumEntry(\Header:=sHeader\MsgArray:=sMsgArr\Icon:=iconInfo\InitValue:=padvTmp1.procAngle.eax_b);
      padvTmp1.procAngle.eax_b:=nValue;

      sHeader:=TextResGet(text_res_no,191);
      sMsgArr{1}:=TextResGet(text_res_no,221)+" 2, "+TextResGet(text_res_no,196)+" 2";
      sMsgArr{2}:=TextResGet(text_res_no,197)+" "+ValToStr(padvTmp1.procAngle.eax_c);
      sMsgArr{3}:="";
      sMsgArr{4}:=TextResGet(text_res_no,198);
      sMsgArr{5}:="";
      nValue:=UINumEntry(\Header:=sHeader\MsgArray:=sMsgArr\Icon:=iconInfo\InitValue:=padvTmp1.procAngle.eax_c);
      padvTmp1.procAngle.eax_c:=nValue;

      ! update partadv data for station
      UpdNextPartAdv 2,padvTmp1\statusCode:=retCode1;
      IF (retCode1<>0) THEN
        sHeader:=TextResGet(text_res_no,194);
        sMsgArr{1}:=TextResGet(text_res_no,200)+" 2";
        sMsgArr{2}:="";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ELSE
      ! not valid part or no part advanced defined in part.
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,194);
      IF (retCode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,203)+" 2";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
      ELSEIF (retCode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 2";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
      ENDIF
      ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
    ENDIF
  ENDPROC

  PROC SetServPosStn2()
    VAR num nValue;

    ! get partadv for station
    GetNextPartAdv 2,padvTmp1\statusCode:=retCode1;

    IF (retCode1=0) THEN
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,192);
      sMsgArr{1}:=TextResGet(text_res_no,221)+" 2, "+TextResGet(text_res_no,196)+" 1";
      sMsgArr{2}:=TextResGet(text_res_no,197)+" "+ValToStr(padvTmp1.serviceAngle.eax_b);
      sMsgArr{3}:="";
      sMsgArr{4}:=TextResGet(text_res_no,198);
      sMsgArr{5}:="";
      nValue:=UINumEntry(\Header:=sHeader\MsgArray:=sMsgArr\Icon:=iconInfo\InitValue:=padvTmp1.serviceAngle.eax_b);
      padvTmp1.serviceAngle.eax_b:=nValue;

      sHeader:=TextResGet(text_res_no,192);
      sMsgArr{1}:=TextResGet(text_res_no,221)+" 2, "+TextResGet(text_res_no,196)+" 2";
      sMsgArr{2}:=TextResGet(text_res_no,197)+" "+ValToStr(padvTmp1.serviceAngle.eax_c);
      sMsgArr{3}:="";
      sMsgArr{4}:=TextResGet(text_res_no,198);
      sMsgArr{5}:="";
      nValue:=UINumEntry(\Header:=sHeader\MsgArray:=sMsgArr\Icon:=iconInfo\InitValue:=padvTmp1.serviceAngle.eax_c);
      padvTmp1.serviceAngle.eax_c:=nValue;

      ! update partadv data for station
      UpdNextPartAdv 2,padvTmp1\statusCode:=retCode1;
      IF (retCode1<>0) THEN
        sHeader:=TextResGet(text_res_no,195);
        sMsgArr{1}:=TextResGet(text_res_no,201)+" 2";
        sMsgArr{2}:="";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ELSE
      ! not valid part or no part advanced defined in part.
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,195);
      IF (retCode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,203)+" 2";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
      ELSEIF (retCode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 2";
        sMsgArr{3}:="";
        sMsgArr{4}:="";
      ENDIF
      ErrWrite sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
    ENDIF
  ENDPROC

  PROC MoveSyncPos1()
    VAR jointtarget jtCurrent;

    DeactInterch1;
    ActInterch1;
    jtCurrent:=CJointT();
    ! apply interchange position
    jtCurrent.extax.eax_b:=0;
    jtCurrent.extax.eax_c:=0;
    jtCurrent.extax.eax_d:=0;
    ActInterch1;
    IF (TaskRunRob()) THEN
      MoveAbsJ jtCurrent,v100,fine,tool0;
    ELSE
      %"MoveExtJ"% jtCurrent,v100,fine;
    ENDIF
    WaitTime nTorqueTime;
    DeactInterch1;

    ActStn1;
    jtCurrent:=CJointT();
    jtCurrent.extax.eax_b:=0;
    jtCurrent.extax.eax_c:=0;
    IF (TaskRunRob()) THEN
      MoveAbsJ jtCurrent,v100,fine,tool0;
    ELSE
      %"MoveExtJ"% jtCurrent,v100,fine;
    ENDIF
    DeactStn1;

    ActStn2;
    jtCurrent:=CJointT();
    jtCurrent.extax.eax_b:=0;
    jtCurrent.extax.eax_c:=0;
    IF (TaskRunRob()) THEN
      MoveAbsJ jtCurrent,v100,fine,tool0;
    ELSE
      %"MoveExtJ"% jtCurrent,v100,fine;
    ENDIF
    DeactStn2;
  ENDPROC

  PROC MoveLoadPosStn1()
    VAR bool bActive;
    VAR jointtarget jtCurrent;

    ! get partadv for station
    GetNextPartAdv 1,padvTmp1\statusCode:=retCode1;

    bActive:=IsMechUnitActive(STN1);
    IF (NOT bActive) ActStn1;
    jtCurrent:=CJointT();
    IF (retCode1=0) THEN
      jtCurrent.extax.eax_b:=padvTmp1.loadAngle.eax_b;
      jtCurrent.extax.eax_c:=padvTmp1.loadAngle.eax_c;
    ELSE
      jtCurrent.extax.eax_b:=0;
      jtCurrent.extax.eax_c:=0;
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,210);
      IF (retcode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,213);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 1";
        sMsgArr{3}:=TextResGet(text_res_no,213);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF
    IF (TaskRunRob()) THEN
      MoveAbsJ jtCurrent,v400,fine,tool0;
    ELSE
      %"MoveExtJ"% jtCurrent,v400,fine;
    ENDIF
    IF (NOT bActive) DeactStn1;
  ENDPROC

  PROC MoveLoadPosStn2()
    VAR bool bActive;
    VAR jointtarget jtCurrent;

    ! get partadv for station
    GetNextPartAdv 2,padvTmp1\statusCode:=retCode1;

    bActive:=IsMechUnitActive(STN2);
    IF (NOT bActive) ActStn2;
    jtCurrent:=CJointT();
    IF (retCode1=0) THEN
      jtCurrent.extax.eax_b:=padvTmp1.loadAngle.eax_b;
      jtCurrent.extax.eax_c:=padvTmp1.loadAngle.eax_c;
    ELSE
      jtCurrent.extax.eax_b:=0;
      jtCurrent.extax.eax_c:=0;
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,210);
      IF (retcode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,213);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 2";
        sMsgArr{3}:=TextResGet(text_res_no,213);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF
    IF (TaskRunRob()) THEN
      MoveAbsJ jtCurrent,v400,fine,tool0;
    ELSE
      %"MoveExtJ"% jtCurrent,v400,fine;
    ENDIF
    IF (NOT bActive) DeactStn2;
  ENDPROC

  PROC MoveProcPosStn1()
    VAR bool bActive;
    VAR jointtarget jtCurrent;

    ! get partadv for station
    GetNextPartAdv 1,padvTmp1\statusCode:=retCode1;

    bActive:=IsMechUnitActive(STN1);
    IF (NOT bActive) ActStn1;
    jtCurrent:=CJointT();
    IF (retCode1=0) THEN
      jtCurrent.extax.eax_b:=padvTmp1.procAngle.eax_b;
      jtCurrent.extax.eax_c:=padvTmp1.procAngle.eax_c;
    ELSE
      jtCurrent.extax.eax_b:=0;
      jtCurrent.extax.eax_c:=0;
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,211);
      IF (retcode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,214);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 1";
        sMsgArr{3}:=TextResGet(text_res_no,214);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF
    IF (TaskRunRob()) THEN
      MoveAbsJ jtCurrent,v400,fine,tool0;
    ELSE
      %"MoveExtJ"% jtCurrent,v400,fine;
    ENDIF
    IF (NOT bActive) DeactStn1;
  ENDPROC

  PROC MoveProcPosStn2()
    VAR bool bActive;
    VAR jointtarget jtCurrent;

    ! get partadv for station
    GetNextPartAdv 2,padvTmp1\statusCode:=retCode1;

    bActive:=IsMechUnitActive(STN2);
    IF (NOT bActive) ActStn2;
    jtCurrent:=CJointT();
    IF (retCode1=0) THEN
      jtCurrent.extax.eax_b:=padvTmp1.procAngle.eax_b;
      jtCurrent.extax.eax_c:=padvTmp1.procAngle.eax_c;
    ELSE
      jtCurrent.extax.eax_b:=0;
      jtCurrent.extax.eax_c:=0;
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,211);
      IF (retcode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,214);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 2";
        sMsgArr{3}:=TextResGet(text_res_no,214);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF
    IF (TaskRunRob()) THEN
      MoveAbsJ jtCurrent,v400,fine,tool0;
    ELSE
      %"MoveExtJ"% jtCurrent,v400,fine;
    ENDIF
    IF (NOT bActive) DeactStn2;
  ENDPROC

  PROC MoveServPosStn1()
    VAR bool bActive;
    VAR jointtarget jtCurrent;

    ! get partadv for station
    GetNextPartAdv 1,padvTmp1\statusCode:=retCode1;

    bActive:=IsMechUnitActive(STN1);
    IF (NOT bActive) ActStn1;
    jtCurrent:=CJointT();
    IF (retCode1=0) THEN
      jtCurrent.extax.eax_b:=padvTmp1.serviceAngle.eax_b;
      jtCurrent.extax.eax_c:=padvTmp1.serviceAngle.eax_c;
    ELSE
      jtCurrent.extax.eax_b:=0;
      jtCurrent.extax.eax_c:=0;
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,212);
      IF (retcode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,215);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 1";
        sMsgArr{3}:=TextResGet(text_res_no,215);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF
    IF (TaskRunRob()) THEN
      MoveAbsJ jtCurrent,v400,fine,tool0;
    ELSE
      %"MoveExtJ"% jtCurrent,v400,fine;
    ENDIF
    IF (NOT bActive) DeactStn1;
  ENDPROC

  PROC MoveServPosStn2()
    VAR bool bActive;
    VAR jointtarget jtCurrent;

    ! get partadv for station
    GetNextPartAdv 2,padvTmp1\statusCode:=retCode1;

    bActive:=IsMechUnitActive(STN2);
    IF (NOT bActive) ActStn2;
    jtCurrent:=CJointT();
    IF (retCode1=0) THEN
      jtCurrent.extax.eax_b:=padvTmp1.serviceAngle.eax_b;
      jtCurrent.extax.eax_c:=padvTmp1.serviceAngle.eax_c;
    ELSE
      jtCurrent.extax.eax_b:=0;
      jtCurrent.extax.eax_c:=0;
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,212);
      IF (retcode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,215);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 2";
        sMsgArr{3}:=TextResGet(text_res_no,215);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF
    IF (TaskRunRob()) THEN
      MoveAbsJ jtCurrent,v400,fine,tool0;
    ELSE
      %"MoveExtJ"% jtCurrent,v400,fine;
    ENDIF
    IF (NOT bActive) DeactStn2;
  ENDPROC

  PROC ActStn1()

    ! get partadv for station
    GetNextPartAdv 1,padvTmp1\statusCode:=retCode1;
    ldLoadStn1:=padvTmp1.load;

    IF (retCode1=0) THEN
      IF (padvTmp1.load.mass<=0.001) THEN
        ldLoadStn1:=ldDefLoadStn1;
        text_res_no:=TextResTabGet("CellText");
        sHeader:=TextResGet(text_res_no,216);
        sMsgArr{1}:=TextResGet(text_res_no,208)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,209);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ELSE
      ldLoadStn1:=ldDefLoadStn1;
      text_res_no:=TextResTabGet("CellText");
      IF (retcode1=-1) THEN
        sHeader:=TextResGet(text_res_no,216);
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,209);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode1=-2) THEN
        sHeader:=TextResGet(text_res_no,216);
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 1";
        sMsgArr{3}:=TextResGet(text_res_no,209);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF
    ActUnit STN1;
    MechUnitLoad STN1,2,ldLoadStn1;
  ENDPROC

  PROC ActStn2()

    ! get partadv for station
    GetNextPartAdv 2,padvTmp1\statusCode:=retCode1;
    ldLoadStn2:=padvTmp1.load;

    IF (retCode1=0) THEN
      IF (ldLoadStn2.mass<=0.001) THEN
        ldLoadStn2:=ldDefLoadStn2;
        text_res_no:=TextResTabGet("CellText");
        sHeader:=TextResGet(text_res_no,216);
        sMsgArr{1}:=TextResGet(text_res_no,208)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,209);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ELSE
      ldLoadStn2:=ldDefLoadStn2;
      text_res_no:=TextResTabGet("CellText");
      IF (retcode1=-1) THEN
        sHeader:=TextResGet(text_res_no,216);
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,209);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode1=-2) THEN
        sHeader:=TextResGet(text_res_no,216);
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 2";
        sMsgArr{3}:=TextResGet(text_res_no,209);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF
    ActUnit STN2;
    MechUnitLoad STN2,2,ldLoadStn2;
  ENDPROC

  PROC ActInterch1()

    ! get partadv for station 1
    GetNextPartAdv 1,padvTmp1\statusCode:=retCode1;
    ldLoadStn1:=padvTmp1.load;
    ! get partadv for station 2
    GetNextPartAdv 2,padvTmp2\statusCode:=retCode2;
    ldLoadStn2:=padvTmp2.load;

    IF (retCode1=0) THEN
      IF (ldLoadStn1.mass<=0.001) THEN
        ldLoadStn1:=ldDefLoadStn1;
        text_res_no:=TextResTabGet("CellText");
        sHeader:=TextResGet(text_res_no,216);
        sMsgArr{1}:=TextResGet(text_res_no,208)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,209);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ELSE
      ldLoadStn1:=ldDefLoadStn1;
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,216);
      IF (retcode1=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,209);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode1=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 1";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 1";
        sMsgArr{3}:=TextResGet(text_res_no,209);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF
    IF (retCode2=0) THEN
      IF (ldLoadStn2.mass<=0.001) THEN
        ldLoadStn2:=ldDefLoadStn2;
        text_res_no:=TextResTabGet("CellText");
        sHeader:=TextResGet(text_res_no,216);
        sMsgArr{1}:=TextResGet(text_res_no,208)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,209);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ELSE
      ldLoadStn2:=ldDefLoadStn2;
      text_res_no:=TextResTabGet("CellText");
      sHeader:=TextResGet(text_res_no,216);
      IF (retcode2=-1) THEN
        sMsgArr{1}:=TextResGet(text_res_no,202)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,209);
        sMsgArr{3}:="";
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ELSEIF (retcode2=-2) THEN
        sMsgArr{1}:=TextResGet(text_res_no,204)+" 2";
        sMsgArr{2}:=TextResGet(text_res_no,205)+" 2";
        sMsgArr{3}:=TextResGet(text_res_no,209);
        sMsgArr{4}:="";
        ErrWrite\W,sHeader,sMsgArr{1}\RL2:=sMsgArr{2}\RL3:=sMsgArr{3}\RL4:=sMsgArr{4};
      ENDIF
    ENDIF
    ActUnit INTERCH;
    MechUnitLoad INTERCH,2,ldLoadStn1;
    MechUnitLoad INTERCH,3,ldLoadStn2;
  ENDPROC

  PROC DeactStn1()
    DeactUnit STN1;
  ENDPROC

  PROC DeactStn2()
    DeactUnit STN2;
  ENDPROC

  PROC DeactInterch1()
    DeactUnit INTERCH;
  ENDPROC
ENDMODULE
